#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_35 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                      Code generated with SymPy 1.13.2                      *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_4096352188840766226) {
   out_4096352188840766226[0] = 0;
   out_4096352188840766226[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_4096352188840766226[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_4096352188840766226[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_4096352188840766226[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_4096352188840766226[5] = -sin(in_vec[1]);
   out_4096352188840766226[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4096352188840766226[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4096352188840766226[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_4096352188840766226[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_4096352188840766226[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_4096352188840766226[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_4096352188840766226[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_4096352188840766226[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_4096352188840766226[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_4096352188840766226[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_4096352188840766226[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_4096352188840766226[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_798024091899035579) {
   out_798024091899035579[0] = delta_x[0] + nom_x[0];
   out_798024091899035579[1] = delta_x[1] + nom_x[1];
   out_798024091899035579[2] = delta_x[2] + nom_x[2];
   out_798024091899035579[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_798024091899035579[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_798024091899035579[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_798024091899035579[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_798024091899035579[7] = delta_x[6] + nom_x[7];
   out_798024091899035579[8] = delta_x[7] + nom_x[8];
   out_798024091899035579[9] = delta_x[8] + nom_x[9];
   out_798024091899035579[10] = delta_x[9] + nom_x[10];
   out_798024091899035579[11] = delta_x[10] + nom_x[11];
   out_798024091899035579[12] = delta_x[11] + nom_x[12];
   out_798024091899035579[13] = delta_x[12] + nom_x[13];
   out_798024091899035579[14] = delta_x[13] + nom_x[14];
   out_798024091899035579[15] = delta_x[14] + nom_x[15];
   out_798024091899035579[16] = delta_x[15] + nom_x[16];
   out_798024091899035579[17] = delta_x[16] + nom_x[17];
   out_798024091899035579[18] = delta_x[17] + nom_x[18];
   out_798024091899035579[19] = delta_x[18] + nom_x[19];
   out_798024091899035579[20] = delta_x[19] + nom_x[20];
   out_798024091899035579[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_5656506561553764650) {
   out_5656506561553764650[0] = -nom_x[0] + true_x[0];
   out_5656506561553764650[1] = -nom_x[1] + true_x[1];
   out_5656506561553764650[2] = -nom_x[2] + true_x[2];
   out_5656506561553764650[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_5656506561553764650[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_5656506561553764650[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_5656506561553764650[6] = -nom_x[7] + true_x[7];
   out_5656506561553764650[7] = -nom_x[8] + true_x[8];
   out_5656506561553764650[8] = -nom_x[9] + true_x[9];
   out_5656506561553764650[9] = -nom_x[10] + true_x[10];
   out_5656506561553764650[10] = -nom_x[11] + true_x[11];
   out_5656506561553764650[11] = -nom_x[12] + true_x[12];
   out_5656506561553764650[12] = -nom_x[13] + true_x[13];
   out_5656506561553764650[13] = -nom_x[14] + true_x[14];
   out_5656506561553764650[14] = -nom_x[15] + true_x[15];
   out_5656506561553764650[15] = -nom_x[16] + true_x[16];
   out_5656506561553764650[16] = -nom_x[17] + true_x[17];
   out_5656506561553764650[17] = -nom_x[18] + true_x[18];
   out_5656506561553764650[18] = -nom_x[19] + true_x[19];
   out_5656506561553764650[19] = -nom_x[20] + true_x[20];
   out_5656506561553764650[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_3361493504081003511) {
   out_3361493504081003511[0] = 1.0;
   out_3361493504081003511[1] = 0;
   out_3361493504081003511[2] = 0;
   out_3361493504081003511[3] = 0.0;
   out_3361493504081003511[4] = 0.0;
   out_3361493504081003511[5] = 0.0;
   out_3361493504081003511[6] = 0.0;
   out_3361493504081003511[7] = 0.0;
   out_3361493504081003511[8] = 0.0;
   out_3361493504081003511[9] = 0.0;
   out_3361493504081003511[10] = 0.0;
   out_3361493504081003511[11] = 0.0;
   out_3361493504081003511[12] = 0.0;
   out_3361493504081003511[13] = 0.0;
   out_3361493504081003511[14] = 0.0;
   out_3361493504081003511[15] = 0.0;
   out_3361493504081003511[16] = 0.0;
   out_3361493504081003511[17] = 0.0;
   out_3361493504081003511[18] = 0.0;
   out_3361493504081003511[19] = 0.0;
   out_3361493504081003511[20] = 0.0;
   out_3361493504081003511[21] = 0;
   out_3361493504081003511[22] = 1.0;
   out_3361493504081003511[23] = 0;
   out_3361493504081003511[24] = 0.0;
   out_3361493504081003511[25] = 0.0;
   out_3361493504081003511[26] = 0.0;
   out_3361493504081003511[27] = 0.0;
   out_3361493504081003511[28] = 0.0;
   out_3361493504081003511[29] = 0.0;
   out_3361493504081003511[30] = 0.0;
   out_3361493504081003511[31] = 0.0;
   out_3361493504081003511[32] = 0.0;
   out_3361493504081003511[33] = 0.0;
   out_3361493504081003511[34] = 0.0;
   out_3361493504081003511[35] = 0.0;
   out_3361493504081003511[36] = 0.0;
   out_3361493504081003511[37] = 0.0;
   out_3361493504081003511[38] = 0.0;
   out_3361493504081003511[39] = 0.0;
   out_3361493504081003511[40] = 0.0;
   out_3361493504081003511[41] = 0.0;
   out_3361493504081003511[42] = 0;
   out_3361493504081003511[43] = 0;
   out_3361493504081003511[44] = 1.0;
   out_3361493504081003511[45] = 0.0;
   out_3361493504081003511[46] = 0.0;
   out_3361493504081003511[47] = 0.0;
   out_3361493504081003511[48] = 0.0;
   out_3361493504081003511[49] = 0.0;
   out_3361493504081003511[50] = 0.0;
   out_3361493504081003511[51] = 0.0;
   out_3361493504081003511[52] = 0.0;
   out_3361493504081003511[53] = 0.0;
   out_3361493504081003511[54] = 0.0;
   out_3361493504081003511[55] = 0.0;
   out_3361493504081003511[56] = 0.0;
   out_3361493504081003511[57] = 0.0;
   out_3361493504081003511[58] = 0.0;
   out_3361493504081003511[59] = 0.0;
   out_3361493504081003511[60] = 0.0;
   out_3361493504081003511[61] = 0.0;
   out_3361493504081003511[62] = 0.0;
   out_3361493504081003511[63] = 0.0;
   out_3361493504081003511[64] = 0.0;
   out_3361493504081003511[65] = 0.0;
   out_3361493504081003511[66] = -0.5*state[4];
   out_3361493504081003511[67] = -0.5*state[5];
   out_3361493504081003511[68] = -0.5*state[6];
   out_3361493504081003511[69] = 0.0;
   out_3361493504081003511[70] = 0.0;
   out_3361493504081003511[71] = 0.0;
   out_3361493504081003511[72] = 0.0;
   out_3361493504081003511[73] = 0.0;
   out_3361493504081003511[74] = 0.0;
   out_3361493504081003511[75] = 0.0;
   out_3361493504081003511[76] = 0.0;
   out_3361493504081003511[77] = 0.0;
   out_3361493504081003511[78] = 0.0;
   out_3361493504081003511[79] = 0.0;
   out_3361493504081003511[80] = 0.0;
   out_3361493504081003511[81] = 0.0;
   out_3361493504081003511[82] = 0.0;
   out_3361493504081003511[83] = 0.0;
   out_3361493504081003511[84] = 0.0;
   out_3361493504081003511[85] = 0.0;
   out_3361493504081003511[86] = 0.0;
   out_3361493504081003511[87] = 0.5*state[3];
   out_3361493504081003511[88] = 0.5*state[6];
   out_3361493504081003511[89] = -0.5*state[5];
   out_3361493504081003511[90] = 0.0;
   out_3361493504081003511[91] = 0.0;
   out_3361493504081003511[92] = 0.0;
   out_3361493504081003511[93] = 0.0;
   out_3361493504081003511[94] = 0.0;
   out_3361493504081003511[95] = 0.0;
   out_3361493504081003511[96] = 0.0;
   out_3361493504081003511[97] = 0.0;
   out_3361493504081003511[98] = 0.0;
   out_3361493504081003511[99] = 0.0;
   out_3361493504081003511[100] = 0.0;
   out_3361493504081003511[101] = 0.0;
   out_3361493504081003511[102] = 0.0;
   out_3361493504081003511[103] = 0.0;
   out_3361493504081003511[104] = 0.0;
   out_3361493504081003511[105] = 0.0;
   out_3361493504081003511[106] = 0.0;
   out_3361493504081003511[107] = 0.0;
   out_3361493504081003511[108] = -0.5*state[6];
   out_3361493504081003511[109] = 0.5*state[3];
   out_3361493504081003511[110] = 0.5*state[4];
   out_3361493504081003511[111] = 0.0;
   out_3361493504081003511[112] = 0.0;
   out_3361493504081003511[113] = 0.0;
   out_3361493504081003511[114] = 0.0;
   out_3361493504081003511[115] = 0.0;
   out_3361493504081003511[116] = 0.0;
   out_3361493504081003511[117] = 0.0;
   out_3361493504081003511[118] = 0.0;
   out_3361493504081003511[119] = 0.0;
   out_3361493504081003511[120] = 0.0;
   out_3361493504081003511[121] = 0.0;
   out_3361493504081003511[122] = 0.0;
   out_3361493504081003511[123] = 0.0;
   out_3361493504081003511[124] = 0.0;
   out_3361493504081003511[125] = 0.0;
   out_3361493504081003511[126] = 0.0;
   out_3361493504081003511[127] = 0.0;
   out_3361493504081003511[128] = 0.0;
   out_3361493504081003511[129] = 0.5*state[5];
   out_3361493504081003511[130] = -0.5*state[4];
   out_3361493504081003511[131] = 0.5*state[3];
   out_3361493504081003511[132] = 0.0;
   out_3361493504081003511[133] = 0.0;
   out_3361493504081003511[134] = 0.0;
   out_3361493504081003511[135] = 0.0;
   out_3361493504081003511[136] = 0.0;
   out_3361493504081003511[137] = 0.0;
   out_3361493504081003511[138] = 0.0;
   out_3361493504081003511[139] = 0.0;
   out_3361493504081003511[140] = 0.0;
   out_3361493504081003511[141] = 0.0;
   out_3361493504081003511[142] = 0.0;
   out_3361493504081003511[143] = 0.0;
   out_3361493504081003511[144] = 0.0;
   out_3361493504081003511[145] = 0.0;
   out_3361493504081003511[146] = 0.0;
   out_3361493504081003511[147] = 0.0;
   out_3361493504081003511[148] = 0.0;
   out_3361493504081003511[149] = 0.0;
   out_3361493504081003511[150] = 0.0;
   out_3361493504081003511[151] = 0.0;
   out_3361493504081003511[152] = 0.0;
   out_3361493504081003511[153] = 1.0;
   out_3361493504081003511[154] = 0;
   out_3361493504081003511[155] = 0;
   out_3361493504081003511[156] = 0;
   out_3361493504081003511[157] = 0;
   out_3361493504081003511[158] = 0;
   out_3361493504081003511[159] = 0;
   out_3361493504081003511[160] = 0;
   out_3361493504081003511[161] = 0;
   out_3361493504081003511[162] = 0;
   out_3361493504081003511[163] = 0;
   out_3361493504081003511[164] = 0;
   out_3361493504081003511[165] = 0;
   out_3361493504081003511[166] = 0;
   out_3361493504081003511[167] = 0;
   out_3361493504081003511[168] = 0.0;
   out_3361493504081003511[169] = 0.0;
   out_3361493504081003511[170] = 0.0;
   out_3361493504081003511[171] = 0.0;
   out_3361493504081003511[172] = 0.0;
   out_3361493504081003511[173] = 0.0;
   out_3361493504081003511[174] = 0;
   out_3361493504081003511[175] = 1.0;
   out_3361493504081003511[176] = 0;
   out_3361493504081003511[177] = 0;
   out_3361493504081003511[178] = 0;
   out_3361493504081003511[179] = 0;
   out_3361493504081003511[180] = 0;
   out_3361493504081003511[181] = 0;
   out_3361493504081003511[182] = 0;
   out_3361493504081003511[183] = 0;
   out_3361493504081003511[184] = 0;
   out_3361493504081003511[185] = 0;
   out_3361493504081003511[186] = 0;
   out_3361493504081003511[187] = 0;
   out_3361493504081003511[188] = 0;
   out_3361493504081003511[189] = 0.0;
   out_3361493504081003511[190] = 0.0;
   out_3361493504081003511[191] = 0.0;
   out_3361493504081003511[192] = 0.0;
   out_3361493504081003511[193] = 0.0;
   out_3361493504081003511[194] = 0.0;
   out_3361493504081003511[195] = 0;
   out_3361493504081003511[196] = 0;
   out_3361493504081003511[197] = 1.0;
   out_3361493504081003511[198] = 0;
   out_3361493504081003511[199] = 0;
   out_3361493504081003511[200] = 0;
   out_3361493504081003511[201] = 0;
   out_3361493504081003511[202] = 0;
   out_3361493504081003511[203] = 0;
   out_3361493504081003511[204] = 0;
   out_3361493504081003511[205] = 0;
   out_3361493504081003511[206] = 0;
   out_3361493504081003511[207] = 0;
   out_3361493504081003511[208] = 0;
   out_3361493504081003511[209] = 0;
   out_3361493504081003511[210] = 0.0;
   out_3361493504081003511[211] = 0.0;
   out_3361493504081003511[212] = 0.0;
   out_3361493504081003511[213] = 0.0;
   out_3361493504081003511[214] = 0.0;
   out_3361493504081003511[215] = 0.0;
   out_3361493504081003511[216] = 0;
   out_3361493504081003511[217] = 0;
   out_3361493504081003511[218] = 0;
   out_3361493504081003511[219] = 1.0;
   out_3361493504081003511[220] = 0;
   out_3361493504081003511[221] = 0;
   out_3361493504081003511[222] = 0;
   out_3361493504081003511[223] = 0;
   out_3361493504081003511[224] = 0;
   out_3361493504081003511[225] = 0;
   out_3361493504081003511[226] = 0;
   out_3361493504081003511[227] = 0;
   out_3361493504081003511[228] = 0;
   out_3361493504081003511[229] = 0;
   out_3361493504081003511[230] = 0;
   out_3361493504081003511[231] = 0.0;
   out_3361493504081003511[232] = 0.0;
   out_3361493504081003511[233] = 0.0;
   out_3361493504081003511[234] = 0.0;
   out_3361493504081003511[235] = 0.0;
   out_3361493504081003511[236] = 0.0;
   out_3361493504081003511[237] = 0;
   out_3361493504081003511[238] = 0;
   out_3361493504081003511[239] = 0;
   out_3361493504081003511[240] = 0;
   out_3361493504081003511[241] = 1.0;
   out_3361493504081003511[242] = 0;
   out_3361493504081003511[243] = 0;
   out_3361493504081003511[244] = 0;
   out_3361493504081003511[245] = 0;
   out_3361493504081003511[246] = 0;
   out_3361493504081003511[247] = 0;
   out_3361493504081003511[248] = 0;
   out_3361493504081003511[249] = 0;
   out_3361493504081003511[250] = 0;
   out_3361493504081003511[251] = 0;
   out_3361493504081003511[252] = 0.0;
   out_3361493504081003511[253] = 0.0;
   out_3361493504081003511[254] = 0.0;
   out_3361493504081003511[255] = 0.0;
   out_3361493504081003511[256] = 0.0;
   out_3361493504081003511[257] = 0.0;
   out_3361493504081003511[258] = 0;
   out_3361493504081003511[259] = 0;
   out_3361493504081003511[260] = 0;
   out_3361493504081003511[261] = 0;
   out_3361493504081003511[262] = 0;
   out_3361493504081003511[263] = 1.0;
   out_3361493504081003511[264] = 0;
   out_3361493504081003511[265] = 0;
   out_3361493504081003511[266] = 0;
   out_3361493504081003511[267] = 0;
   out_3361493504081003511[268] = 0;
   out_3361493504081003511[269] = 0;
   out_3361493504081003511[270] = 0;
   out_3361493504081003511[271] = 0;
   out_3361493504081003511[272] = 0;
   out_3361493504081003511[273] = 0.0;
   out_3361493504081003511[274] = 0.0;
   out_3361493504081003511[275] = 0.0;
   out_3361493504081003511[276] = 0.0;
   out_3361493504081003511[277] = 0.0;
   out_3361493504081003511[278] = 0.0;
   out_3361493504081003511[279] = 0;
   out_3361493504081003511[280] = 0;
   out_3361493504081003511[281] = 0;
   out_3361493504081003511[282] = 0;
   out_3361493504081003511[283] = 0;
   out_3361493504081003511[284] = 0;
   out_3361493504081003511[285] = 1.0;
   out_3361493504081003511[286] = 0;
   out_3361493504081003511[287] = 0;
   out_3361493504081003511[288] = 0;
   out_3361493504081003511[289] = 0;
   out_3361493504081003511[290] = 0;
   out_3361493504081003511[291] = 0;
   out_3361493504081003511[292] = 0;
   out_3361493504081003511[293] = 0;
   out_3361493504081003511[294] = 0.0;
   out_3361493504081003511[295] = 0.0;
   out_3361493504081003511[296] = 0.0;
   out_3361493504081003511[297] = 0.0;
   out_3361493504081003511[298] = 0.0;
   out_3361493504081003511[299] = 0.0;
   out_3361493504081003511[300] = 0;
   out_3361493504081003511[301] = 0;
   out_3361493504081003511[302] = 0;
   out_3361493504081003511[303] = 0;
   out_3361493504081003511[304] = 0;
   out_3361493504081003511[305] = 0;
   out_3361493504081003511[306] = 0;
   out_3361493504081003511[307] = 1.0;
   out_3361493504081003511[308] = 0;
   out_3361493504081003511[309] = 0;
   out_3361493504081003511[310] = 0;
   out_3361493504081003511[311] = 0;
   out_3361493504081003511[312] = 0;
   out_3361493504081003511[313] = 0;
   out_3361493504081003511[314] = 0;
   out_3361493504081003511[315] = 0.0;
   out_3361493504081003511[316] = 0.0;
   out_3361493504081003511[317] = 0.0;
   out_3361493504081003511[318] = 0.0;
   out_3361493504081003511[319] = 0.0;
   out_3361493504081003511[320] = 0.0;
   out_3361493504081003511[321] = 0;
   out_3361493504081003511[322] = 0;
   out_3361493504081003511[323] = 0;
   out_3361493504081003511[324] = 0;
   out_3361493504081003511[325] = 0;
   out_3361493504081003511[326] = 0;
   out_3361493504081003511[327] = 0;
   out_3361493504081003511[328] = 0;
   out_3361493504081003511[329] = 1.0;
   out_3361493504081003511[330] = 0;
   out_3361493504081003511[331] = 0;
   out_3361493504081003511[332] = 0;
   out_3361493504081003511[333] = 0;
   out_3361493504081003511[334] = 0;
   out_3361493504081003511[335] = 0;
   out_3361493504081003511[336] = 0.0;
   out_3361493504081003511[337] = 0.0;
   out_3361493504081003511[338] = 0.0;
   out_3361493504081003511[339] = 0.0;
   out_3361493504081003511[340] = 0.0;
   out_3361493504081003511[341] = 0.0;
   out_3361493504081003511[342] = 0;
   out_3361493504081003511[343] = 0;
   out_3361493504081003511[344] = 0;
   out_3361493504081003511[345] = 0;
   out_3361493504081003511[346] = 0;
   out_3361493504081003511[347] = 0;
   out_3361493504081003511[348] = 0;
   out_3361493504081003511[349] = 0;
   out_3361493504081003511[350] = 0;
   out_3361493504081003511[351] = 1.0;
   out_3361493504081003511[352] = 0;
   out_3361493504081003511[353] = 0;
   out_3361493504081003511[354] = 0;
   out_3361493504081003511[355] = 0;
   out_3361493504081003511[356] = 0;
   out_3361493504081003511[357] = 0.0;
   out_3361493504081003511[358] = 0.0;
   out_3361493504081003511[359] = 0.0;
   out_3361493504081003511[360] = 0.0;
   out_3361493504081003511[361] = 0.0;
   out_3361493504081003511[362] = 0.0;
   out_3361493504081003511[363] = 0;
   out_3361493504081003511[364] = 0;
   out_3361493504081003511[365] = 0;
   out_3361493504081003511[366] = 0;
   out_3361493504081003511[367] = 0;
   out_3361493504081003511[368] = 0;
   out_3361493504081003511[369] = 0;
   out_3361493504081003511[370] = 0;
   out_3361493504081003511[371] = 0;
   out_3361493504081003511[372] = 0;
   out_3361493504081003511[373] = 1.0;
   out_3361493504081003511[374] = 0;
   out_3361493504081003511[375] = 0;
   out_3361493504081003511[376] = 0;
   out_3361493504081003511[377] = 0;
   out_3361493504081003511[378] = 0.0;
   out_3361493504081003511[379] = 0.0;
   out_3361493504081003511[380] = 0.0;
   out_3361493504081003511[381] = 0.0;
   out_3361493504081003511[382] = 0.0;
   out_3361493504081003511[383] = 0.0;
   out_3361493504081003511[384] = 0;
   out_3361493504081003511[385] = 0;
   out_3361493504081003511[386] = 0;
   out_3361493504081003511[387] = 0;
   out_3361493504081003511[388] = 0;
   out_3361493504081003511[389] = 0;
   out_3361493504081003511[390] = 0;
   out_3361493504081003511[391] = 0;
   out_3361493504081003511[392] = 0;
   out_3361493504081003511[393] = 0;
   out_3361493504081003511[394] = 0;
   out_3361493504081003511[395] = 1.0;
   out_3361493504081003511[396] = 0;
   out_3361493504081003511[397] = 0;
   out_3361493504081003511[398] = 0;
   out_3361493504081003511[399] = 0.0;
   out_3361493504081003511[400] = 0.0;
   out_3361493504081003511[401] = 0.0;
   out_3361493504081003511[402] = 0.0;
   out_3361493504081003511[403] = 0.0;
   out_3361493504081003511[404] = 0.0;
   out_3361493504081003511[405] = 0;
   out_3361493504081003511[406] = 0;
   out_3361493504081003511[407] = 0;
   out_3361493504081003511[408] = 0;
   out_3361493504081003511[409] = 0;
   out_3361493504081003511[410] = 0;
   out_3361493504081003511[411] = 0;
   out_3361493504081003511[412] = 0;
   out_3361493504081003511[413] = 0;
   out_3361493504081003511[414] = 0;
   out_3361493504081003511[415] = 0;
   out_3361493504081003511[416] = 0;
   out_3361493504081003511[417] = 1.0;
   out_3361493504081003511[418] = 0;
   out_3361493504081003511[419] = 0;
   out_3361493504081003511[420] = 0.0;
   out_3361493504081003511[421] = 0.0;
   out_3361493504081003511[422] = 0.0;
   out_3361493504081003511[423] = 0.0;
   out_3361493504081003511[424] = 0.0;
   out_3361493504081003511[425] = 0.0;
   out_3361493504081003511[426] = 0;
   out_3361493504081003511[427] = 0;
   out_3361493504081003511[428] = 0;
   out_3361493504081003511[429] = 0;
   out_3361493504081003511[430] = 0;
   out_3361493504081003511[431] = 0;
   out_3361493504081003511[432] = 0;
   out_3361493504081003511[433] = 0;
   out_3361493504081003511[434] = 0;
   out_3361493504081003511[435] = 0;
   out_3361493504081003511[436] = 0;
   out_3361493504081003511[437] = 0;
   out_3361493504081003511[438] = 0;
   out_3361493504081003511[439] = 1.0;
   out_3361493504081003511[440] = 0;
   out_3361493504081003511[441] = 0.0;
   out_3361493504081003511[442] = 0.0;
   out_3361493504081003511[443] = 0.0;
   out_3361493504081003511[444] = 0.0;
   out_3361493504081003511[445] = 0.0;
   out_3361493504081003511[446] = 0.0;
   out_3361493504081003511[447] = 0;
   out_3361493504081003511[448] = 0;
   out_3361493504081003511[449] = 0;
   out_3361493504081003511[450] = 0;
   out_3361493504081003511[451] = 0;
   out_3361493504081003511[452] = 0;
   out_3361493504081003511[453] = 0;
   out_3361493504081003511[454] = 0;
   out_3361493504081003511[455] = 0;
   out_3361493504081003511[456] = 0;
   out_3361493504081003511[457] = 0;
   out_3361493504081003511[458] = 0;
   out_3361493504081003511[459] = 0;
   out_3361493504081003511[460] = 0;
   out_3361493504081003511[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_1225601417078643242) {
   out_1225601417078643242[0] = dt*state[7] + state[0];
   out_1225601417078643242[1] = dt*state[8] + state[1];
   out_1225601417078643242[2] = dt*state[9] + state[2];
   out_1225601417078643242[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_1225601417078643242[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_1225601417078643242[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_1225601417078643242[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_1225601417078643242[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_1225601417078643242[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_1225601417078643242[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_1225601417078643242[10] = state[10];
   out_1225601417078643242[11] = state[11];
   out_1225601417078643242[12] = state[12];
   out_1225601417078643242[13] = state[13];
   out_1225601417078643242[14] = state[14];
   out_1225601417078643242[15] = state[15];
   out_1225601417078643242[16] = state[16];
   out_1225601417078643242[17] = state[17];
   out_1225601417078643242[18] = state[18];
   out_1225601417078643242[19] = state[19];
   out_1225601417078643242[20] = state[20];
   out_1225601417078643242[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2259205386111757029) {
   out_2259205386111757029[0] = 1;
   out_2259205386111757029[1] = 0;
   out_2259205386111757029[2] = 0;
   out_2259205386111757029[3] = 0;
   out_2259205386111757029[4] = 0;
   out_2259205386111757029[5] = 0;
   out_2259205386111757029[6] = dt;
   out_2259205386111757029[7] = 0;
   out_2259205386111757029[8] = 0;
   out_2259205386111757029[9] = 0;
   out_2259205386111757029[10] = 0;
   out_2259205386111757029[11] = 0;
   out_2259205386111757029[12] = 0;
   out_2259205386111757029[13] = 0;
   out_2259205386111757029[14] = 0;
   out_2259205386111757029[15] = 0;
   out_2259205386111757029[16] = 0;
   out_2259205386111757029[17] = 0;
   out_2259205386111757029[18] = 0;
   out_2259205386111757029[19] = 0;
   out_2259205386111757029[20] = 0;
   out_2259205386111757029[21] = 0;
   out_2259205386111757029[22] = 1;
   out_2259205386111757029[23] = 0;
   out_2259205386111757029[24] = 0;
   out_2259205386111757029[25] = 0;
   out_2259205386111757029[26] = 0;
   out_2259205386111757029[27] = 0;
   out_2259205386111757029[28] = dt;
   out_2259205386111757029[29] = 0;
   out_2259205386111757029[30] = 0;
   out_2259205386111757029[31] = 0;
   out_2259205386111757029[32] = 0;
   out_2259205386111757029[33] = 0;
   out_2259205386111757029[34] = 0;
   out_2259205386111757029[35] = 0;
   out_2259205386111757029[36] = 0;
   out_2259205386111757029[37] = 0;
   out_2259205386111757029[38] = 0;
   out_2259205386111757029[39] = 0;
   out_2259205386111757029[40] = 0;
   out_2259205386111757029[41] = 0;
   out_2259205386111757029[42] = 0;
   out_2259205386111757029[43] = 0;
   out_2259205386111757029[44] = 1;
   out_2259205386111757029[45] = 0;
   out_2259205386111757029[46] = 0;
   out_2259205386111757029[47] = 0;
   out_2259205386111757029[48] = 0;
   out_2259205386111757029[49] = 0;
   out_2259205386111757029[50] = dt;
   out_2259205386111757029[51] = 0;
   out_2259205386111757029[52] = 0;
   out_2259205386111757029[53] = 0;
   out_2259205386111757029[54] = 0;
   out_2259205386111757029[55] = 0;
   out_2259205386111757029[56] = 0;
   out_2259205386111757029[57] = 0;
   out_2259205386111757029[58] = 0;
   out_2259205386111757029[59] = 0;
   out_2259205386111757029[60] = 0;
   out_2259205386111757029[61] = 0;
   out_2259205386111757029[62] = 0;
   out_2259205386111757029[63] = 0;
   out_2259205386111757029[64] = 0;
   out_2259205386111757029[65] = 0;
   out_2259205386111757029[66] = 1;
   out_2259205386111757029[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2259205386111757029[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2259205386111757029[69] = 0;
   out_2259205386111757029[70] = 0;
   out_2259205386111757029[71] = 0;
   out_2259205386111757029[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2259205386111757029[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2259205386111757029[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2259205386111757029[75] = 0;
   out_2259205386111757029[76] = 0;
   out_2259205386111757029[77] = 0;
   out_2259205386111757029[78] = 0;
   out_2259205386111757029[79] = 0;
   out_2259205386111757029[80] = 0;
   out_2259205386111757029[81] = 0;
   out_2259205386111757029[82] = 0;
   out_2259205386111757029[83] = 0;
   out_2259205386111757029[84] = 0;
   out_2259205386111757029[85] = 0;
   out_2259205386111757029[86] = 0;
   out_2259205386111757029[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2259205386111757029[88] = 1;
   out_2259205386111757029[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2259205386111757029[90] = 0;
   out_2259205386111757029[91] = 0;
   out_2259205386111757029[92] = 0;
   out_2259205386111757029[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2259205386111757029[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2259205386111757029[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2259205386111757029[96] = 0;
   out_2259205386111757029[97] = 0;
   out_2259205386111757029[98] = 0;
   out_2259205386111757029[99] = 0;
   out_2259205386111757029[100] = 0;
   out_2259205386111757029[101] = 0;
   out_2259205386111757029[102] = 0;
   out_2259205386111757029[103] = 0;
   out_2259205386111757029[104] = 0;
   out_2259205386111757029[105] = 0;
   out_2259205386111757029[106] = 0;
   out_2259205386111757029[107] = 0;
   out_2259205386111757029[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2259205386111757029[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2259205386111757029[110] = 1;
   out_2259205386111757029[111] = 0;
   out_2259205386111757029[112] = 0;
   out_2259205386111757029[113] = 0;
   out_2259205386111757029[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2259205386111757029[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2259205386111757029[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2259205386111757029[117] = 0;
   out_2259205386111757029[118] = 0;
   out_2259205386111757029[119] = 0;
   out_2259205386111757029[120] = 0;
   out_2259205386111757029[121] = 0;
   out_2259205386111757029[122] = 0;
   out_2259205386111757029[123] = 0;
   out_2259205386111757029[124] = 0;
   out_2259205386111757029[125] = 0;
   out_2259205386111757029[126] = 0;
   out_2259205386111757029[127] = 0;
   out_2259205386111757029[128] = 0;
   out_2259205386111757029[129] = 0;
   out_2259205386111757029[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2259205386111757029[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2259205386111757029[132] = 1;
   out_2259205386111757029[133] = 0;
   out_2259205386111757029[134] = 0;
   out_2259205386111757029[135] = 0;
   out_2259205386111757029[136] = 0;
   out_2259205386111757029[137] = 0;
   out_2259205386111757029[138] = 0;
   out_2259205386111757029[139] = 0;
   out_2259205386111757029[140] = 0;
   out_2259205386111757029[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2259205386111757029[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2259205386111757029[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2259205386111757029[144] = 0;
   out_2259205386111757029[145] = 0;
   out_2259205386111757029[146] = 0;
   out_2259205386111757029[147] = 0;
   out_2259205386111757029[148] = 0;
   out_2259205386111757029[149] = 0;
   out_2259205386111757029[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2259205386111757029[151] = 0;
   out_2259205386111757029[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2259205386111757029[153] = 0;
   out_2259205386111757029[154] = 1;
   out_2259205386111757029[155] = 0;
   out_2259205386111757029[156] = 0;
   out_2259205386111757029[157] = 0;
   out_2259205386111757029[158] = 0;
   out_2259205386111757029[159] = 0;
   out_2259205386111757029[160] = 0;
   out_2259205386111757029[161] = 0;
   out_2259205386111757029[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2259205386111757029[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2259205386111757029[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2259205386111757029[165] = 0;
   out_2259205386111757029[166] = 0;
   out_2259205386111757029[167] = 0;
   out_2259205386111757029[168] = 0;
   out_2259205386111757029[169] = 0;
   out_2259205386111757029[170] = 0;
   out_2259205386111757029[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2259205386111757029[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2259205386111757029[173] = 0;
   out_2259205386111757029[174] = 0;
   out_2259205386111757029[175] = 0;
   out_2259205386111757029[176] = 1;
   out_2259205386111757029[177] = 0;
   out_2259205386111757029[178] = 0;
   out_2259205386111757029[179] = 0;
   out_2259205386111757029[180] = 0;
   out_2259205386111757029[181] = 0;
   out_2259205386111757029[182] = 0;
   out_2259205386111757029[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2259205386111757029[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2259205386111757029[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2259205386111757029[186] = 0;
   out_2259205386111757029[187] = 0;
   out_2259205386111757029[188] = 0;
   out_2259205386111757029[189] = 0;
   out_2259205386111757029[190] = 0;
   out_2259205386111757029[191] = 0;
   out_2259205386111757029[192] = 0;
   out_2259205386111757029[193] = 0;
   out_2259205386111757029[194] = 0;
   out_2259205386111757029[195] = 0;
   out_2259205386111757029[196] = 0;
   out_2259205386111757029[197] = 0;
   out_2259205386111757029[198] = 1;
   out_2259205386111757029[199] = 0;
   out_2259205386111757029[200] = 0;
   out_2259205386111757029[201] = 0;
   out_2259205386111757029[202] = 0;
   out_2259205386111757029[203] = 0;
   out_2259205386111757029[204] = 0;
   out_2259205386111757029[205] = 0;
   out_2259205386111757029[206] = 0;
   out_2259205386111757029[207] = 0;
   out_2259205386111757029[208] = 0;
   out_2259205386111757029[209] = 0;
   out_2259205386111757029[210] = 0;
   out_2259205386111757029[211] = 0;
   out_2259205386111757029[212] = 0;
   out_2259205386111757029[213] = 0;
   out_2259205386111757029[214] = 0;
   out_2259205386111757029[215] = 0;
   out_2259205386111757029[216] = 0;
   out_2259205386111757029[217] = 0;
   out_2259205386111757029[218] = 0;
   out_2259205386111757029[219] = 0;
   out_2259205386111757029[220] = 1;
   out_2259205386111757029[221] = 0;
   out_2259205386111757029[222] = 0;
   out_2259205386111757029[223] = 0;
   out_2259205386111757029[224] = 0;
   out_2259205386111757029[225] = 0;
   out_2259205386111757029[226] = 0;
   out_2259205386111757029[227] = 0;
   out_2259205386111757029[228] = 0;
   out_2259205386111757029[229] = 0;
   out_2259205386111757029[230] = 0;
   out_2259205386111757029[231] = 0;
   out_2259205386111757029[232] = 0;
   out_2259205386111757029[233] = 0;
   out_2259205386111757029[234] = 0;
   out_2259205386111757029[235] = 0;
   out_2259205386111757029[236] = 0;
   out_2259205386111757029[237] = 0;
   out_2259205386111757029[238] = 0;
   out_2259205386111757029[239] = 0;
   out_2259205386111757029[240] = 0;
   out_2259205386111757029[241] = 0;
   out_2259205386111757029[242] = 1;
   out_2259205386111757029[243] = 0;
   out_2259205386111757029[244] = 0;
   out_2259205386111757029[245] = 0;
   out_2259205386111757029[246] = 0;
   out_2259205386111757029[247] = 0;
   out_2259205386111757029[248] = 0;
   out_2259205386111757029[249] = 0;
   out_2259205386111757029[250] = 0;
   out_2259205386111757029[251] = 0;
   out_2259205386111757029[252] = 0;
   out_2259205386111757029[253] = 0;
   out_2259205386111757029[254] = 0;
   out_2259205386111757029[255] = 0;
   out_2259205386111757029[256] = 0;
   out_2259205386111757029[257] = 0;
   out_2259205386111757029[258] = 0;
   out_2259205386111757029[259] = 0;
   out_2259205386111757029[260] = 0;
   out_2259205386111757029[261] = 0;
   out_2259205386111757029[262] = 0;
   out_2259205386111757029[263] = 0;
   out_2259205386111757029[264] = 1;
   out_2259205386111757029[265] = 0;
   out_2259205386111757029[266] = 0;
   out_2259205386111757029[267] = 0;
   out_2259205386111757029[268] = 0;
   out_2259205386111757029[269] = 0;
   out_2259205386111757029[270] = 0;
   out_2259205386111757029[271] = 0;
   out_2259205386111757029[272] = 0;
   out_2259205386111757029[273] = 0;
   out_2259205386111757029[274] = 0;
   out_2259205386111757029[275] = 0;
   out_2259205386111757029[276] = 0;
   out_2259205386111757029[277] = 0;
   out_2259205386111757029[278] = 0;
   out_2259205386111757029[279] = 0;
   out_2259205386111757029[280] = 0;
   out_2259205386111757029[281] = 0;
   out_2259205386111757029[282] = 0;
   out_2259205386111757029[283] = 0;
   out_2259205386111757029[284] = 0;
   out_2259205386111757029[285] = 0;
   out_2259205386111757029[286] = 1;
   out_2259205386111757029[287] = 0;
   out_2259205386111757029[288] = 0;
   out_2259205386111757029[289] = 0;
   out_2259205386111757029[290] = 0;
   out_2259205386111757029[291] = 0;
   out_2259205386111757029[292] = 0;
   out_2259205386111757029[293] = 0;
   out_2259205386111757029[294] = 0;
   out_2259205386111757029[295] = 0;
   out_2259205386111757029[296] = 0;
   out_2259205386111757029[297] = 0;
   out_2259205386111757029[298] = 0;
   out_2259205386111757029[299] = 0;
   out_2259205386111757029[300] = 0;
   out_2259205386111757029[301] = 0;
   out_2259205386111757029[302] = 0;
   out_2259205386111757029[303] = 0;
   out_2259205386111757029[304] = 0;
   out_2259205386111757029[305] = 0;
   out_2259205386111757029[306] = 0;
   out_2259205386111757029[307] = 0;
   out_2259205386111757029[308] = 1;
   out_2259205386111757029[309] = 0;
   out_2259205386111757029[310] = 0;
   out_2259205386111757029[311] = 0;
   out_2259205386111757029[312] = 0;
   out_2259205386111757029[313] = 0;
   out_2259205386111757029[314] = 0;
   out_2259205386111757029[315] = 0;
   out_2259205386111757029[316] = 0;
   out_2259205386111757029[317] = 0;
   out_2259205386111757029[318] = 0;
   out_2259205386111757029[319] = 0;
   out_2259205386111757029[320] = 0;
   out_2259205386111757029[321] = 0;
   out_2259205386111757029[322] = 0;
   out_2259205386111757029[323] = 0;
   out_2259205386111757029[324] = 0;
   out_2259205386111757029[325] = 0;
   out_2259205386111757029[326] = 0;
   out_2259205386111757029[327] = 0;
   out_2259205386111757029[328] = 0;
   out_2259205386111757029[329] = 0;
   out_2259205386111757029[330] = 1;
   out_2259205386111757029[331] = 0;
   out_2259205386111757029[332] = 0;
   out_2259205386111757029[333] = 0;
   out_2259205386111757029[334] = 0;
   out_2259205386111757029[335] = 0;
   out_2259205386111757029[336] = 0;
   out_2259205386111757029[337] = 0;
   out_2259205386111757029[338] = 0;
   out_2259205386111757029[339] = 0;
   out_2259205386111757029[340] = 0;
   out_2259205386111757029[341] = 0;
   out_2259205386111757029[342] = 0;
   out_2259205386111757029[343] = 0;
   out_2259205386111757029[344] = 0;
   out_2259205386111757029[345] = 0;
   out_2259205386111757029[346] = 0;
   out_2259205386111757029[347] = 0;
   out_2259205386111757029[348] = 0;
   out_2259205386111757029[349] = 0;
   out_2259205386111757029[350] = 0;
   out_2259205386111757029[351] = 0;
   out_2259205386111757029[352] = 1;
   out_2259205386111757029[353] = 0;
   out_2259205386111757029[354] = 0;
   out_2259205386111757029[355] = 0;
   out_2259205386111757029[356] = 0;
   out_2259205386111757029[357] = 0;
   out_2259205386111757029[358] = 0;
   out_2259205386111757029[359] = 0;
   out_2259205386111757029[360] = 0;
   out_2259205386111757029[361] = 0;
   out_2259205386111757029[362] = 0;
   out_2259205386111757029[363] = 0;
   out_2259205386111757029[364] = 0;
   out_2259205386111757029[365] = 0;
   out_2259205386111757029[366] = 0;
   out_2259205386111757029[367] = 0;
   out_2259205386111757029[368] = 0;
   out_2259205386111757029[369] = 0;
   out_2259205386111757029[370] = 0;
   out_2259205386111757029[371] = 0;
   out_2259205386111757029[372] = 0;
   out_2259205386111757029[373] = 0;
   out_2259205386111757029[374] = 1;
   out_2259205386111757029[375] = 0;
   out_2259205386111757029[376] = 0;
   out_2259205386111757029[377] = 0;
   out_2259205386111757029[378] = 0;
   out_2259205386111757029[379] = 0;
   out_2259205386111757029[380] = 0;
   out_2259205386111757029[381] = 0;
   out_2259205386111757029[382] = 0;
   out_2259205386111757029[383] = 0;
   out_2259205386111757029[384] = 0;
   out_2259205386111757029[385] = 0;
   out_2259205386111757029[386] = 0;
   out_2259205386111757029[387] = 0;
   out_2259205386111757029[388] = 0;
   out_2259205386111757029[389] = 0;
   out_2259205386111757029[390] = 0;
   out_2259205386111757029[391] = 0;
   out_2259205386111757029[392] = 0;
   out_2259205386111757029[393] = 0;
   out_2259205386111757029[394] = 0;
   out_2259205386111757029[395] = 0;
   out_2259205386111757029[396] = 1;
   out_2259205386111757029[397] = 0;
   out_2259205386111757029[398] = 0;
   out_2259205386111757029[399] = 0;
   out_2259205386111757029[400] = 0;
   out_2259205386111757029[401] = 0;
   out_2259205386111757029[402] = 0;
   out_2259205386111757029[403] = 0;
   out_2259205386111757029[404] = 0;
   out_2259205386111757029[405] = 0;
   out_2259205386111757029[406] = 0;
   out_2259205386111757029[407] = 0;
   out_2259205386111757029[408] = 0;
   out_2259205386111757029[409] = 0;
   out_2259205386111757029[410] = 0;
   out_2259205386111757029[411] = 0;
   out_2259205386111757029[412] = 0;
   out_2259205386111757029[413] = 0;
   out_2259205386111757029[414] = 0;
   out_2259205386111757029[415] = 0;
   out_2259205386111757029[416] = 0;
   out_2259205386111757029[417] = 0;
   out_2259205386111757029[418] = 1;
   out_2259205386111757029[419] = 0;
   out_2259205386111757029[420] = 0;
   out_2259205386111757029[421] = 0;
   out_2259205386111757029[422] = 0;
   out_2259205386111757029[423] = 0;
   out_2259205386111757029[424] = 0;
   out_2259205386111757029[425] = 0;
   out_2259205386111757029[426] = 0;
   out_2259205386111757029[427] = 0;
   out_2259205386111757029[428] = 0;
   out_2259205386111757029[429] = 0;
   out_2259205386111757029[430] = 0;
   out_2259205386111757029[431] = 0;
   out_2259205386111757029[432] = 0;
   out_2259205386111757029[433] = 0;
   out_2259205386111757029[434] = 0;
   out_2259205386111757029[435] = 0;
   out_2259205386111757029[436] = 0;
   out_2259205386111757029[437] = 0;
   out_2259205386111757029[438] = 0;
   out_2259205386111757029[439] = 0;
   out_2259205386111757029[440] = 1;
}
void h_4(double *state, double *unused, double *out_5599927515254597799) {
   out_5599927515254597799[0] = state[10] + state[13];
   out_5599927515254597799[1] = state[11] + state[14];
   out_5599927515254597799[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_5173771833487823844) {
   out_5173771833487823844[0] = 0;
   out_5173771833487823844[1] = 0;
   out_5173771833487823844[2] = 0;
   out_5173771833487823844[3] = 0;
   out_5173771833487823844[4] = 0;
   out_5173771833487823844[5] = 0;
   out_5173771833487823844[6] = 0;
   out_5173771833487823844[7] = 0;
   out_5173771833487823844[8] = 0;
   out_5173771833487823844[9] = 0;
   out_5173771833487823844[10] = 1;
   out_5173771833487823844[11] = 0;
   out_5173771833487823844[12] = 0;
   out_5173771833487823844[13] = 1;
   out_5173771833487823844[14] = 0;
   out_5173771833487823844[15] = 0;
   out_5173771833487823844[16] = 0;
   out_5173771833487823844[17] = 0;
   out_5173771833487823844[18] = 0;
   out_5173771833487823844[19] = 0;
   out_5173771833487823844[20] = 0;
   out_5173771833487823844[21] = 0;
   out_5173771833487823844[22] = 0;
   out_5173771833487823844[23] = 0;
   out_5173771833487823844[24] = 0;
   out_5173771833487823844[25] = 0;
   out_5173771833487823844[26] = 0;
   out_5173771833487823844[27] = 0;
   out_5173771833487823844[28] = 0;
   out_5173771833487823844[29] = 0;
   out_5173771833487823844[30] = 0;
   out_5173771833487823844[31] = 0;
   out_5173771833487823844[32] = 0;
   out_5173771833487823844[33] = 1;
   out_5173771833487823844[34] = 0;
   out_5173771833487823844[35] = 0;
   out_5173771833487823844[36] = 1;
   out_5173771833487823844[37] = 0;
   out_5173771833487823844[38] = 0;
   out_5173771833487823844[39] = 0;
   out_5173771833487823844[40] = 0;
   out_5173771833487823844[41] = 0;
   out_5173771833487823844[42] = 0;
   out_5173771833487823844[43] = 0;
   out_5173771833487823844[44] = 0;
   out_5173771833487823844[45] = 0;
   out_5173771833487823844[46] = 0;
   out_5173771833487823844[47] = 0;
   out_5173771833487823844[48] = 0;
   out_5173771833487823844[49] = 0;
   out_5173771833487823844[50] = 0;
   out_5173771833487823844[51] = 0;
   out_5173771833487823844[52] = 0;
   out_5173771833487823844[53] = 0;
   out_5173771833487823844[54] = 0;
   out_5173771833487823844[55] = 0;
   out_5173771833487823844[56] = 1;
   out_5173771833487823844[57] = 0;
   out_5173771833487823844[58] = 0;
   out_5173771833487823844[59] = 1;
   out_5173771833487823844[60] = 0;
   out_5173771833487823844[61] = 0;
   out_5173771833487823844[62] = 0;
   out_5173771833487823844[63] = 0;
   out_5173771833487823844[64] = 0;
   out_5173771833487823844[65] = 0;
}
void h_9(double *state, double *unused, double *out_7242012759537522680) {
   out_7242012759537522680[0] = state[10];
   out_7242012759537522680[1] = state[11];
   out_7242012759537522680[2] = state[12];
}
void H_9(double *state, double *unused, double *out_5414961480117414489) {
   out_5414961480117414489[0] = 0;
   out_5414961480117414489[1] = 0;
   out_5414961480117414489[2] = 0;
   out_5414961480117414489[3] = 0;
   out_5414961480117414489[4] = 0;
   out_5414961480117414489[5] = 0;
   out_5414961480117414489[6] = 0;
   out_5414961480117414489[7] = 0;
   out_5414961480117414489[8] = 0;
   out_5414961480117414489[9] = 0;
   out_5414961480117414489[10] = 1;
   out_5414961480117414489[11] = 0;
   out_5414961480117414489[12] = 0;
   out_5414961480117414489[13] = 0;
   out_5414961480117414489[14] = 0;
   out_5414961480117414489[15] = 0;
   out_5414961480117414489[16] = 0;
   out_5414961480117414489[17] = 0;
   out_5414961480117414489[18] = 0;
   out_5414961480117414489[19] = 0;
   out_5414961480117414489[20] = 0;
   out_5414961480117414489[21] = 0;
   out_5414961480117414489[22] = 0;
   out_5414961480117414489[23] = 0;
   out_5414961480117414489[24] = 0;
   out_5414961480117414489[25] = 0;
   out_5414961480117414489[26] = 0;
   out_5414961480117414489[27] = 0;
   out_5414961480117414489[28] = 0;
   out_5414961480117414489[29] = 0;
   out_5414961480117414489[30] = 0;
   out_5414961480117414489[31] = 0;
   out_5414961480117414489[32] = 0;
   out_5414961480117414489[33] = 1;
   out_5414961480117414489[34] = 0;
   out_5414961480117414489[35] = 0;
   out_5414961480117414489[36] = 0;
   out_5414961480117414489[37] = 0;
   out_5414961480117414489[38] = 0;
   out_5414961480117414489[39] = 0;
   out_5414961480117414489[40] = 0;
   out_5414961480117414489[41] = 0;
   out_5414961480117414489[42] = 0;
   out_5414961480117414489[43] = 0;
   out_5414961480117414489[44] = 0;
   out_5414961480117414489[45] = 0;
   out_5414961480117414489[46] = 0;
   out_5414961480117414489[47] = 0;
   out_5414961480117414489[48] = 0;
   out_5414961480117414489[49] = 0;
   out_5414961480117414489[50] = 0;
   out_5414961480117414489[51] = 0;
   out_5414961480117414489[52] = 0;
   out_5414961480117414489[53] = 0;
   out_5414961480117414489[54] = 0;
   out_5414961480117414489[55] = 0;
   out_5414961480117414489[56] = 1;
   out_5414961480117414489[57] = 0;
   out_5414961480117414489[58] = 0;
   out_5414961480117414489[59] = 0;
   out_5414961480117414489[60] = 0;
   out_5414961480117414489[61] = 0;
   out_5414961480117414489[62] = 0;
   out_5414961480117414489[63] = 0;
   out_5414961480117414489[64] = 0;
   out_5414961480117414489[65] = 0;
}
void h_10(double *state, double *unused, double *out_365177150643522550) {
   out_365177150643522550[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_365177150643522550[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_365177150643522550[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_6769915268183936847) {
   out_6769915268183936847[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_6769915268183936847[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6769915268183936847[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_6769915268183936847[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6769915268183936847[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6769915268183936847[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6769915268183936847[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6769915268183936847[7] = 0;
   out_6769915268183936847[8] = 0;
   out_6769915268183936847[9] = 0;
   out_6769915268183936847[10] = 0;
   out_6769915268183936847[11] = 0;
   out_6769915268183936847[12] = 0;
   out_6769915268183936847[13] = 0;
   out_6769915268183936847[14] = 0;
   out_6769915268183936847[15] = 0;
   out_6769915268183936847[16] = 1;
   out_6769915268183936847[17] = 0;
   out_6769915268183936847[18] = 0;
   out_6769915268183936847[19] = 1;
   out_6769915268183936847[20] = 0;
   out_6769915268183936847[21] = 0;
   out_6769915268183936847[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_6769915268183936847[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_6769915268183936847[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_6769915268183936847[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6769915268183936847[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6769915268183936847[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6769915268183936847[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6769915268183936847[29] = 0;
   out_6769915268183936847[30] = 0;
   out_6769915268183936847[31] = 0;
   out_6769915268183936847[32] = 0;
   out_6769915268183936847[33] = 0;
   out_6769915268183936847[34] = 0;
   out_6769915268183936847[35] = 0;
   out_6769915268183936847[36] = 0;
   out_6769915268183936847[37] = 0;
   out_6769915268183936847[38] = 0;
   out_6769915268183936847[39] = 1;
   out_6769915268183936847[40] = 0;
   out_6769915268183936847[41] = 0;
   out_6769915268183936847[42] = 1;
   out_6769915268183936847[43] = 0;
   out_6769915268183936847[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_6769915268183936847[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_6769915268183936847[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_6769915268183936847[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_6769915268183936847[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_6769915268183936847[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_6769915268183936847[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_6769915268183936847[51] = 0;
   out_6769915268183936847[52] = 0;
   out_6769915268183936847[53] = 0;
   out_6769915268183936847[54] = 0;
   out_6769915268183936847[55] = 0;
   out_6769915268183936847[56] = 0;
   out_6769915268183936847[57] = 0;
   out_6769915268183936847[58] = 0;
   out_6769915268183936847[59] = 0;
   out_6769915268183936847[60] = 0;
   out_6769915268183936847[61] = 0;
   out_6769915268183936847[62] = 1;
   out_6769915268183936847[63] = 0;
   out_6769915268183936847[64] = 0;
   out_6769915268183936847[65] = 1;
}
void h_12(double *state, double *unused, double *out_1591422151980634258) {
   out_1591422151980634258[0] = state[0];
   out_1591422151980634258[1] = state[1];
   out_1591422151980634258[2] = state[2];
}
void H_12(double *state, double *unused, double *out_8253515832189765977) {
   out_8253515832189765977[0] = 1;
   out_8253515832189765977[1] = 0;
   out_8253515832189765977[2] = 0;
   out_8253515832189765977[3] = 0;
   out_8253515832189765977[4] = 0;
   out_8253515832189765977[5] = 0;
   out_8253515832189765977[6] = 0;
   out_8253515832189765977[7] = 0;
   out_8253515832189765977[8] = 0;
   out_8253515832189765977[9] = 0;
   out_8253515832189765977[10] = 0;
   out_8253515832189765977[11] = 0;
   out_8253515832189765977[12] = 0;
   out_8253515832189765977[13] = 0;
   out_8253515832189765977[14] = 0;
   out_8253515832189765977[15] = 0;
   out_8253515832189765977[16] = 0;
   out_8253515832189765977[17] = 0;
   out_8253515832189765977[18] = 0;
   out_8253515832189765977[19] = 0;
   out_8253515832189765977[20] = 0;
   out_8253515832189765977[21] = 0;
   out_8253515832189765977[22] = 0;
   out_8253515832189765977[23] = 1;
   out_8253515832189765977[24] = 0;
   out_8253515832189765977[25] = 0;
   out_8253515832189765977[26] = 0;
   out_8253515832189765977[27] = 0;
   out_8253515832189765977[28] = 0;
   out_8253515832189765977[29] = 0;
   out_8253515832189765977[30] = 0;
   out_8253515832189765977[31] = 0;
   out_8253515832189765977[32] = 0;
   out_8253515832189765977[33] = 0;
   out_8253515832189765977[34] = 0;
   out_8253515832189765977[35] = 0;
   out_8253515832189765977[36] = 0;
   out_8253515832189765977[37] = 0;
   out_8253515832189765977[38] = 0;
   out_8253515832189765977[39] = 0;
   out_8253515832189765977[40] = 0;
   out_8253515832189765977[41] = 0;
   out_8253515832189765977[42] = 0;
   out_8253515832189765977[43] = 0;
   out_8253515832189765977[44] = 0;
   out_8253515832189765977[45] = 0;
   out_8253515832189765977[46] = 1;
   out_8253515832189765977[47] = 0;
   out_8253515832189765977[48] = 0;
   out_8253515832189765977[49] = 0;
   out_8253515832189765977[50] = 0;
   out_8253515832189765977[51] = 0;
   out_8253515832189765977[52] = 0;
   out_8253515832189765977[53] = 0;
   out_8253515832189765977[54] = 0;
   out_8253515832189765977[55] = 0;
   out_8253515832189765977[56] = 0;
   out_8253515832189765977[57] = 0;
   out_8253515832189765977[58] = 0;
   out_8253515832189765977[59] = 0;
   out_8253515832189765977[60] = 0;
   out_8253515832189765977[61] = 0;
   out_8253515832189765977[62] = 0;
   out_8253515832189765977[63] = 0;
   out_8253515832189765977[64] = 0;
   out_8253515832189765977[65] = 0;
}
void h_35(double *state, double *unused, double *out_1416623566352726972) {
   out_1416623566352726972[0] = state[7];
   out_1416623566352726972[1] = state[8];
   out_1416623566352726972[2] = state[9];
}
void H_35(double *state, double *unused, double *out_8540433890860431220) {
   out_8540433890860431220[0] = 0;
   out_8540433890860431220[1] = 0;
   out_8540433890860431220[2] = 0;
   out_8540433890860431220[3] = 0;
   out_8540433890860431220[4] = 0;
   out_8540433890860431220[5] = 0;
   out_8540433890860431220[6] = 0;
   out_8540433890860431220[7] = 1;
   out_8540433890860431220[8] = 0;
   out_8540433890860431220[9] = 0;
   out_8540433890860431220[10] = 0;
   out_8540433890860431220[11] = 0;
   out_8540433890860431220[12] = 0;
   out_8540433890860431220[13] = 0;
   out_8540433890860431220[14] = 0;
   out_8540433890860431220[15] = 0;
   out_8540433890860431220[16] = 0;
   out_8540433890860431220[17] = 0;
   out_8540433890860431220[18] = 0;
   out_8540433890860431220[19] = 0;
   out_8540433890860431220[20] = 0;
   out_8540433890860431220[21] = 0;
   out_8540433890860431220[22] = 0;
   out_8540433890860431220[23] = 0;
   out_8540433890860431220[24] = 0;
   out_8540433890860431220[25] = 0;
   out_8540433890860431220[26] = 0;
   out_8540433890860431220[27] = 0;
   out_8540433890860431220[28] = 0;
   out_8540433890860431220[29] = 0;
   out_8540433890860431220[30] = 1;
   out_8540433890860431220[31] = 0;
   out_8540433890860431220[32] = 0;
   out_8540433890860431220[33] = 0;
   out_8540433890860431220[34] = 0;
   out_8540433890860431220[35] = 0;
   out_8540433890860431220[36] = 0;
   out_8540433890860431220[37] = 0;
   out_8540433890860431220[38] = 0;
   out_8540433890860431220[39] = 0;
   out_8540433890860431220[40] = 0;
   out_8540433890860431220[41] = 0;
   out_8540433890860431220[42] = 0;
   out_8540433890860431220[43] = 0;
   out_8540433890860431220[44] = 0;
   out_8540433890860431220[45] = 0;
   out_8540433890860431220[46] = 0;
   out_8540433890860431220[47] = 0;
   out_8540433890860431220[48] = 0;
   out_8540433890860431220[49] = 0;
   out_8540433890860431220[50] = 0;
   out_8540433890860431220[51] = 0;
   out_8540433890860431220[52] = 0;
   out_8540433890860431220[53] = 1;
   out_8540433890860431220[54] = 0;
   out_8540433890860431220[55] = 0;
   out_8540433890860431220[56] = 0;
   out_8540433890860431220[57] = 0;
   out_8540433890860431220[58] = 0;
   out_8540433890860431220[59] = 0;
   out_8540433890860431220[60] = 0;
   out_8540433890860431220[61] = 0;
   out_8540433890860431220[62] = 0;
   out_8540433890860431220[63] = 0;
   out_8540433890860431220[64] = 0;
   out_8540433890860431220[65] = 0;
}
void h_32(double *state, double *unused, double *out_3004314155538115219) {
   out_3004314155538115219[0] = state[3];
   out_3004314155538115219[1] = state[4];
   out_3004314155538115219[2] = state[5];
   out_3004314155538115219[3] = state[6];
}
void H_32(double *state, double *unused, double *out_1625569387166314864) {
   out_1625569387166314864[0] = 0;
   out_1625569387166314864[1] = 0;
   out_1625569387166314864[2] = 0;
   out_1625569387166314864[3] = 1;
   out_1625569387166314864[4] = 0;
   out_1625569387166314864[5] = 0;
   out_1625569387166314864[6] = 0;
   out_1625569387166314864[7] = 0;
   out_1625569387166314864[8] = 0;
   out_1625569387166314864[9] = 0;
   out_1625569387166314864[10] = 0;
   out_1625569387166314864[11] = 0;
   out_1625569387166314864[12] = 0;
   out_1625569387166314864[13] = 0;
   out_1625569387166314864[14] = 0;
   out_1625569387166314864[15] = 0;
   out_1625569387166314864[16] = 0;
   out_1625569387166314864[17] = 0;
   out_1625569387166314864[18] = 0;
   out_1625569387166314864[19] = 0;
   out_1625569387166314864[20] = 0;
   out_1625569387166314864[21] = 0;
   out_1625569387166314864[22] = 0;
   out_1625569387166314864[23] = 0;
   out_1625569387166314864[24] = 0;
   out_1625569387166314864[25] = 0;
   out_1625569387166314864[26] = 1;
   out_1625569387166314864[27] = 0;
   out_1625569387166314864[28] = 0;
   out_1625569387166314864[29] = 0;
   out_1625569387166314864[30] = 0;
   out_1625569387166314864[31] = 0;
   out_1625569387166314864[32] = 0;
   out_1625569387166314864[33] = 0;
   out_1625569387166314864[34] = 0;
   out_1625569387166314864[35] = 0;
   out_1625569387166314864[36] = 0;
   out_1625569387166314864[37] = 0;
   out_1625569387166314864[38] = 0;
   out_1625569387166314864[39] = 0;
   out_1625569387166314864[40] = 0;
   out_1625569387166314864[41] = 0;
   out_1625569387166314864[42] = 0;
   out_1625569387166314864[43] = 0;
   out_1625569387166314864[44] = 0;
   out_1625569387166314864[45] = 0;
   out_1625569387166314864[46] = 0;
   out_1625569387166314864[47] = 0;
   out_1625569387166314864[48] = 0;
   out_1625569387166314864[49] = 1;
   out_1625569387166314864[50] = 0;
   out_1625569387166314864[51] = 0;
   out_1625569387166314864[52] = 0;
   out_1625569387166314864[53] = 0;
   out_1625569387166314864[54] = 0;
   out_1625569387166314864[55] = 0;
   out_1625569387166314864[56] = 0;
   out_1625569387166314864[57] = 0;
   out_1625569387166314864[58] = 0;
   out_1625569387166314864[59] = 0;
   out_1625569387166314864[60] = 0;
   out_1625569387166314864[61] = 0;
   out_1625569387166314864[62] = 0;
   out_1625569387166314864[63] = 0;
   out_1625569387166314864[64] = 0;
   out_1625569387166314864[65] = 0;
   out_1625569387166314864[66] = 0;
   out_1625569387166314864[67] = 0;
   out_1625569387166314864[68] = 0;
   out_1625569387166314864[69] = 0;
   out_1625569387166314864[70] = 0;
   out_1625569387166314864[71] = 0;
   out_1625569387166314864[72] = 1;
   out_1625569387166314864[73] = 0;
   out_1625569387166314864[74] = 0;
   out_1625569387166314864[75] = 0;
   out_1625569387166314864[76] = 0;
   out_1625569387166314864[77] = 0;
   out_1625569387166314864[78] = 0;
   out_1625569387166314864[79] = 0;
   out_1625569387166314864[80] = 0;
   out_1625569387166314864[81] = 0;
   out_1625569387166314864[82] = 0;
   out_1625569387166314864[83] = 0;
   out_1625569387166314864[84] = 0;
   out_1625569387166314864[85] = 0;
   out_1625569387166314864[86] = 0;
   out_1625569387166314864[87] = 0;
}
void h_13(double *state, double *unused, double *out_7419366823086331224) {
   out_7419366823086331224[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_7419366823086331224[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_7419366823086331224[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2635471484017337743) {
   out_2635471484017337743[0] = 0;
   out_2635471484017337743[1] = 0;
   out_2635471484017337743[2] = 0;
   out_2635471484017337743[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2635471484017337743[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2635471484017337743[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2635471484017337743[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2635471484017337743[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2635471484017337743[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2635471484017337743[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2635471484017337743[10] = 0;
   out_2635471484017337743[11] = 0;
   out_2635471484017337743[12] = 0;
   out_2635471484017337743[13] = 0;
   out_2635471484017337743[14] = 0;
   out_2635471484017337743[15] = 0;
   out_2635471484017337743[16] = 0;
   out_2635471484017337743[17] = 0;
   out_2635471484017337743[18] = 0;
   out_2635471484017337743[19] = 0;
   out_2635471484017337743[20] = 0;
   out_2635471484017337743[21] = 0;
   out_2635471484017337743[22] = 0;
   out_2635471484017337743[23] = 0;
   out_2635471484017337743[24] = 0;
   out_2635471484017337743[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2635471484017337743[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2635471484017337743[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2635471484017337743[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2635471484017337743[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2635471484017337743[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2635471484017337743[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2635471484017337743[32] = 0;
   out_2635471484017337743[33] = 0;
   out_2635471484017337743[34] = 0;
   out_2635471484017337743[35] = 0;
   out_2635471484017337743[36] = 0;
   out_2635471484017337743[37] = 0;
   out_2635471484017337743[38] = 0;
   out_2635471484017337743[39] = 0;
   out_2635471484017337743[40] = 0;
   out_2635471484017337743[41] = 0;
   out_2635471484017337743[42] = 0;
   out_2635471484017337743[43] = 0;
   out_2635471484017337743[44] = 0;
   out_2635471484017337743[45] = 0;
   out_2635471484017337743[46] = 0;
   out_2635471484017337743[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2635471484017337743[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2635471484017337743[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2635471484017337743[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2635471484017337743[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2635471484017337743[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2635471484017337743[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2635471484017337743[54] = 0;
   out_2635471484017337743[55] = 0;
   out_2635471484017337743[56] = 0;
   out_2635471484017337743[57] = 0;
   out_2635471484017337743[58] = 0;
   out_2635471484017337743[59] = 0;
   out_2635471484017337743[60] = 0;
   out_2635471484017337743[61] = 0;
   out_2635471484017337743[62] = 0;
   out_2635471484017337743[63] = 0;
   out_2635471484017337743[64] = 0;
   out_2635471484017337743[65] = 0;
}
void h_14(double *state, double *unused, double *out_7242012759537522680) {
   out_7242012759537522680[0] = state[10];
   out_7242012759537522680[1] = state[11];
   out_7242012759537522680[2] = state[12];
}
void H_14(double *state, double *unused, double *out_5414961480117414489) {
   out_5414961480117414489[0] = 0;
   out_5414961480117414489[1] = 0;
   out_5414961480117414489[2] = 0;
   out_5414961480117414489[3] = 0;
   out_5414961480117414489[4] = 0;
   out_5414961480117414489[5] = 0;
   out_5414961480117414489[6] = 0;
   out_5414961480117414489[7] = 0;
   out_5414961480117414489[8] = 0;
   out_5414961480117414489[9] = 0;
   out_5414961480117414489[10] = 1;
   out_5414961480117414489[11] = 0;
   out_5414961480117414489[12] = 0;
   out_5414961480117414489[13] = 0;
   out_5414961480117414489[14] = 0;
   out_5414961480117414489[15] = 0;
   out_5414961480117414489[16] = 0;
   out_5414961480117414489[17] = 0;
   out_5414961480117414489[18] = 0;
   out_5414961480117414489[19] = 0;
   out_5414961480117414489[20] = 0;
   out_5414961480117414489[21] = 0;
   out_5414961480117414489[22] = 0;
   out_5414961480117414489[23] = 0;
   out_5414961480117414489[24] = 0;
   out_5414961480117414489[25] = 0;
   out_5414961480117414489[26] = 0;
   out_5414961480117414489[27] = 0;
   out_5414961480117414489[28] = 0;
   out_5414961480117414489[29] = 0;
   out_5414961480117414489[30] = 0;
   out_5414961480117414489[31] = 0;
   out_5414961480117414489[32] = 0;
   out_5414961480117414489[33] = 1;
   out_5414961480117414489[34] = 0;
   out_5414961480117414489[35] = 0;
   out_5414961480117414489[36] = 0;
   out_5414961480117414489[37] = 0;
   out_5414961480117414489[38] = 0;
   out_5414961480117414489[39] = 0;
   out_5414961480117414489[40] = 0;
   out_5414961480117414489[41] = 0;
   out_5414961480117414489[42] = 0;
   out_5414961480117414489[43] = 0;
   out_5414961480117414489[44] = 0;
   out_5414961480117414489[45] = 0;
   out_5414961480117414489[46] = 0;
   out_5414961480117414489[47] = 0;
   out_5414961480117414489[48] = 0;
   out_5414961480117414489[49] = 0;
   out_5414961480117414489[50] = 0;
   out_5414961480117414489[51] = 0;
   out_5414961480117414489[52] = 0;
   out_5414961480117414489[53] = 0;
   out_5414961480117414489[54] = 0;
   out_5414961480117414489[55] = 0;
   out_5414961480117414489[56] = 1;
   out_5414961480117414489[57] = 0;
   out_5414961480117414489[58] = 0;
   out_5414961480117414489[59] = 0;
   out_5414961480117414489[60] = 0;
   out_5414961480117414489[61] = 0;
   out_5414961480117414489[62] = 0;
   out_5414961480117414489[63] = 0;
   out_5414961480117414489[64] = 0;
   out_5414961480117414489[65] = 0;
}
void h_33(double *state, double *unused, double *out_5604409779114302461) {
   out_5604409779114302461[0] = state[16];
   out_5604409779114302461[1] = state[17];
   out_5604409779114302461[2] = state[18];
}
void H_33(double *state, double *unused, double *out_6755753178210262792) {
   out_6755753178210262792[0] = 0;
   out_6755753178210262792[1] = 0;
   out_6755753178210262792[2] = 0;
   out_6755753178210262792[3] = 0;
   out_6755753178210262792[4] = 0;
   out_6755753178210262792[5] = 0;
   out_6755753178210262792[6] = 0;
   out_6755753178210262792[7] = 0;
   out_6755753178210262792[8] = 0;
   out_6755753178210262792[9] = 0;
   out_6755753178210262792[10] = 0;
   out_6755753178210262792[11] = 0;
   out_6755753178210262792[12] = 0;
   out_6755753178210262792[13] = 0;
   out_6755753178210262792[14] = 0;
   out_6755753178210262792[15] = 0;
   out_6755753178210262792[16] = 1;
   out_6755753178210262792[17] = 0;
   out_6755753178210262792[18] = 0;
   out_6755753178210262792[19] = 0;
   out_6755753178210262792[20] = 0;
   out_6755753178210262792[21] = 0;
   out_6755753178210262792[22] = 0;
   out_6755753178210262792[23] = 0;
   out_6755753178210262792[24] = 0;
   out_6755753178210262792[25] = 0;
   out_6755753178210262792[26] = 0;
   out_6755753178210262792[27] = 0;
   out_6755753178210262792[28] = 0;
   out_6755753178210262792[29] = 0;
   out_6755753178210262792[30] = 0;
   out_6755753178210262792[31] = 0;
   out_6755753178210262792[32] = 0;
   out_6755753178210262792[33] = 0;
   out_6755753178210262792[34] = 0;
   out_6755753178210262792[35] = 0;
   out_6755753178210262792[36] = 0;
   out_6755753178210262792[37] = 0;
   out_6755753178210262792[38] = 0;
   out_6755753178210262792[39] = 1;
   out_6755753178210262792[40] = 0;
   out_6755753178210262792[41] = 0;
   out_6755753178210262792[42] = 0;
   out_6755753178210262792[43] = 0;
   out_6755753178210262792[44] = 0;
   out_6755753178210262792[45] = 0;
   out_6755753178210262792[46] = 0;
   out_6755753178210262792[47] = 0;
   out_6755753178210262792[48] = 0;
   out_6755753178210262792[49] = 0;
   out_6755753178210262792[50] = 0;
   out_6755753178210262792[51] = 0;
   out_6755753178210262792[52] = 0;
   out_6755753178210262792[53] = 0;
   out_6755753178210262792[54] = 0;
   out_6755753178210262792[55] = 0;
   out_6755753178210262792[56] = 0;
   out_6755753178210262792[57] = 0;
   out_6755753178210262792[58] = 0;
   out_6755753178210262792[59] = 0;
   out_6755753178210262792[60] = 0;
   out_6755753178210262792[61] = 0;
   out_6755753178210262792[62] = 1;
   out_6755753178210262792[63] = 0;
   out_6755753178210262792[64] = 0;
   out_6755753178210262792[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_35(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_35, H_35, NULL, in_z, in_R, in_ea, MAHA_THRESH_35);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_4096352188840766226) {
  H(in_vec, out_4096352188840766226);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_798024091899035579) {
  err_fun(nom_x, delta_x, out_798024091899035579);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_5656506561553764650) {
  inv_err_fun(nom_x, true_x, out_5656506561553764650);
}
void live_H_mod_fun(double *state, double *out_3361493504081003511) {
  H_mod_fun(state, out_3361493504081003511);
}
void live_f_fun(double *state, double dt, double *out_1225601417078643242) {
  f_fun(state,  dt, out_1225601417078643242);
}
void live_F_fun(double *state, double dt, double *out_2259205386111757029) {
  F_fun(state,  dt, out_2259205386111757029);
}
void live_h_4(double *state, double *unused, double *out_5599927515254597799) {
  h_4(state, unused, out_5599927515254597799);
}
void live_H_4(double *state, double *unused, double *out_5173771833487823844) {
  H_4(state, unused, out_5173771833487823844);
}
void live_h_9(double *state, double *unused, double *out_7242012759537522680) {
  h_9(state, unused, out_7242012759537522680);
}
void live_H_9(double *state, double *unused, double *out_5414961480117414489) {
  H_9(state, unused, out_5414961480117414489);
}
void live_h_10(double *state, double *unused, double *out_365177150643522550) {
  h_10(state, unused, out_365177150643522550);
}
void live_H_10(double *state, double *unused, double *out_6769915268183936847) {
  H_10(state, unused, out_6769915268183936847);
}
void live_h_12(double *state, double *unused, double *out_1591422151980634258) {
  h_12(state, unused, out_1591422151980634258);
}
void live_H_12(double *state, double *unused, double *out_8253515832189765977) {
  H_12(state, unused, out_8253515832189765977);
}
void live_h_35(double *state, double *unused, double *out_1416623566352726972) {
  h_35(state, unused, out_1416623566352726972);
}
void live_H_35(double *state, double *unused, double *out_8540433890860431220) {
  H_35(state, unused, out_8540433890860431220);
}
void live_h_32(double *state, double *unused, double *out_3004314155538115219) {
  h_32(state, unused, out_3004314155538115219);
}
void live_H_32(double *state, double *unused, double *out_1625569387166314864) {
  H_32(state, unused, out_1625569387166314864);
}
void live_h_13(double *state, double *unused, double *out_7419366823086331224) {
  h_13(state, unused, out_7419366823086331224);
}
void live_H_13(double *state, double *unused, double *out_2635471484017337743) {
  H_13(state, unused, out_2635471484017337743);
}
void live_h_14(double *state, double *unused, double *out_7242012759537522680) {
  h_14(state, unused, out_7242012759537522680);
}
void live_H_14(double *state, double *unused, double *out_5414961480117414489) {
  H_14(state, unused, out_5414961480117414489);
}
void live_h_33(double *state, double *unused, double *out_5604409779114302461) {
  h_33(state, unused, out_5604409779114302461);
}
void live_H_33(double *state, double *unused, double *out_6755753178210262792) {
  H_33(state, unused, out_6755753178210262792);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 35, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 35, live_h_35 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 35, live_H_35 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 35, live_update_35 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_lib_init(live)
